name: Build MagicControl

on:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        run: |
          # Download and set up the latest Android Command Line Tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d cmdline-tools
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          
      - name: Accept Android Licenses
        run: |
          # Use the yes command to accept all licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null || true
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0"
          
      - name: Generate Release Keystore
        run: |
          mkdir -p app
          rm -f app/release.keystore
          keytool -genkey -v \
            -keystore app/release.keystore \
            -storepass magiccontrol123 \
            -alias magiccontrol \
            -keypass magiccontrol123 \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=MagicControl, OU=Development, O=MagicControl, L=Paris, ST=France, C=FR"

      - name: Configure signing in gradle.properties
        run: |
          echo "RELEASE_STORE_FILE=release.keystore" >> gradle.properties
          echo "RELEASE_STORE_PASSWORD=magiccontrol123" >> gradle.properties
          echo "RELEASE_KEY_ALIAS=magiccontrol" >> gradle.properties
          echo "RELEASE_KEY_PASSWORD=magiccontrol123" >> gradle.properties

      - name: Build signed Android APK
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease

      - name: Find and Upload APK
        run: |
          APK_PATH=$(find app/build -name "*release*.apk" | grep -v "unsigned" | head -1)
          if [ -z "$APK_PATH" ]; then
            echo "‚ùå Aucun APK sign√© trouv√© !"
            exit 1
          fi
          echo "‚úÖ APK sign√© trouv√© : $APK_PATH"
          cp "$APK_PATH" magiccontrol-release.apk
          echo "üìä Taille du fichier : $(du -h magiccontrol-release.apk | cut -f1)"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: magiccontrol-android
          path: magiccontrol-release.apk
