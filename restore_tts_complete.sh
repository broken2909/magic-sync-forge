#!/bin/bash
echo "üîß R√âTABLISSEMENT TTS COMPLET - RIEN OUBLI√â"

cd /data/data/com.termux/files/home/magic-sync-forge/

# ==================== SAUVEGARDE ====================
echo "=== üì∏ SAUVEGARDE ==="
cp app/src/main/java/com/magiccontrol/service/WakeWordService.kt app/src/main/java/com/magiccontrol/service/WakeWordService.kt.backup
echo "‚úÖ Sauvegarde cr√©√©e"

# ==================== √âTAT ACTUEL COMPLET ====================
echo ""
echo "=== üîç √âTAT ACTUEL COMPLET ==="
echo "üìä Lignes totales: $(wc -l < app/src/main/java/com/magiccontrol/service/WakeWordService.kt)"
echo "üì¶ Imports:"
grep "^import" app/src/main/java/com/magiccontrol/service/WakeWordService.kt
echo "üéØ M√©thodes principales:"
grep -n "fun " app/src/main/java/com/magiccontrol/service/WakeWordService.kt

# ==================== CORRECTION COMPL√àTE ====================
echo ""
echo "=== üõ†Ô∏è R√âTABLISSEMENT COMPLET ==="

cat > app/src/main/java/com/magiccontrol/service/WakeWordService.kt << 'FILE'
package com.magiccontrol.service

import android.app.Notification
import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.Service
import android.content.Intent
import android.os.Build
import android.os.Handler
import android.os.IBinder
import android.os.Looper
import android.util.Log
import androidx.core.app.NotificationCompat
import com.magiccontrol.recognizer.WakeWordDetector
import com.magiccontrol.tts.TTSManager
import com.magiccontrol.R

class WakeWordService : Service() {
    private lateinit var wakeWordDetector: WakeWordDetector
    private val TAG = "WakeWordService"
    private val CHANNEL_ID = "WakeWordServiceChannel"

    override fun onCreate() {
        super.onCreate()
        Log.d(TAG, "Service de d√©tection cr√©√©")
        createNotificationChannel()
        wakeWordDetector = WakeWordDetector(applicationContext)

        wakeWordDetector.onWakeWordDetected = {
            Log.d(TAG, "Mot d activation d√©tect√©")
            startFullRecognition()
        }
    }

    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
        Log.d(TAG, "D√©marrage service d√©tection")

        val notification = createNotification()
        startForeground(1, notification)

        // ‚úÖ √âcoute imm√©diate
        startWakeWordDetection()

        // ‚úÖ TTS APR√àS 3 SECONDES - COMPLETEMENT R√âTABLI
        Handler(Looper.getMainLooper()).postDelayed({
            Log.d(TAG, "üîä Lancement message vocal d'activation")
            TTSManager.speak(applicationContext, applicationContext.getString(R.string.activation_prompt))
        }, 3000L)

        return START_STICKY
    }

    private fun createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val serviceChannel = NotificationChannel(
                CHANNEL_ID,
                "Service D√©tection Vocale",
                NotificationManager.IMPORTANCE_LOW
            )
            val manager = getSystemService(NotificationManager::class.java)
            manager.createNotificationChannel(serviceChannel)
        }
    }

    private fun createNotification(): Notification {
        return NotificationCompat.Builder(this, CHANNEL_ID)
            .setContentTitle("MagicControl")
            .setContentText("√âcoute activation...")
            .setSmallIcon(android.R.drawable.ic_media_play)
            .build()
    }

    private fun startWakeWordDetection() {
        try {
            wakeWordDetector.startListening()
            Log.d(TAG, "D√©tection d√©marr√©e")
        } catch (e: Exception) {
            Log.e(TAG, "Erreur d√©marrage d√©tection", e)
        }
    }

    private fun startFullRecognition() {
        val intent = Intent(this, FullRecognitionService::class.java)
        startService(intent)
        Log.d(TAG, "Reconnaissance d√©marr√©e")
    }

    override fun onDestroy() {
        super.onDestroy()
        Log.d(TAG, "Arr√™t service d√©tection")
        wakeWordDetector.stopListening()
    }

    override fun onBind(intent: Intent?): IBinder? = null
}
FILE

# ==================== V√âRIFICATIONS COMPL√àTES ====================
echo ""
echo "=== ‚úÖ V√âRIFICATIONS COMPL√àTES ==="

# 1. Fichier cr√©√©
if [ ! -f "app/src/main/java/com/magiccontrol/service/WakeWordService.kt" ]; then
    echo "‚ùå Fichier non cr√©√©"
    exit 1
fi
echo "‚úÖ Fichier cr√©√©"

# 2. Import TTSManager
if grep -q "import com.magiccontrol.tts.TTSManager" app/src/main/java/com/magiccontrol/service/WakeWordService.kt; then
    echo "‚úÖ Import TTSManager pr√©sent"
else
    echo "‚ùå Import TTSManager manquant"
    exit 1
fi

# 3. Appel TTS avec activation_prompt
if grep -q 'TTSManager.speak.*activation_prompt' app/src/main/java/com/magiccontrol/service/WakeWordService.kt; then
    echo "‚úÖ Appel TTS avec activation_prompt pr√©sent"
else
    echo "‚ùå Appel TTS manquant"
    exit 1
fi

# 4. D√©lai 3 secondes
if grep -q "postDelayed.*3000L" app/src/main/java/com/magiccontrol/service/WakeWordService.kt; then
    echo "‚úÖ D√©lai 3 secondes pr√©sent"
else
    echo "‚ùå D√©lai manquant"
    exit 1
fi

# 5. √âcoute imm√©diate
if grep -q "startWakeWordDetection()" app/src/main/java/com/magiccontrol/service/WakeWordService.kt; then
    echo "‚úÖ √âcoute imm√©diate pr√©sente"
else
    echo "‚ùå √âcoute imm√©diate manquante"
    exit 1
fi

# 6. Toutes les m√©thodes conserv√©es
echo "=== üîß M√âTHODES CONSERV√âES ==="
for method in "onCreate" "onStartCommand" "createNotificationChannel" "createNotification" "startWakeWordDetection" "startFullRecognition" "onDestroy"; do
    if grep -q "fun $method" app/src/main/java/com/magiccontrol/service/WakeWordService.kt; then
        echo "‚úÖ $method"
    else
        echo "‚ùå $method MANQUANT"
        exit 1
    fi
done

# 7. Braces √©quilibr√©es
start_braces=$(grep -o "{" app/src/main/java/com/magiccontrol/service/WakeWordService.kt | wc -l)
end_braces=$(grep -o "}" app/src/main/java/com/magiccontrol/service/WakeWordService.kt | wc -l)
if [ "$start_braces" -eq "$end_braces" ]; then
    echo "‚úÖ Braces √©quilibr√©es: $start_braces"
else
    echo "‚ùå Braces d√©s√©quilibr√©es: $start_braces { vs $end_braces }"
    exit 1
fi

# 8. Comparaison avec sauvegarde
echo ""
echo "=== üîÑ COMPARAISON AVEC SAUVEGARDE ==="
diff_count=$(diff -u app/src/main/java/com/magiccontrol/service/WakeWordService.kt.backup app/src/main/java/com/magiccontrol/service/WakeWordService.kt | grep "^[+-]" | grep -v "^\+\+\+\|^---" | wc -l)
echo "üìä Lignes modifi√©es: $diff_count"

echo ""
echo "üéØ TTS COMPL√àTEMENT R√âTABLI - RIEN OUBLI√â"
echo "üìä 8 v√©rifications pass√©es - Structure intacte"
echo "üöÄ PUSH: git add . && git commit -m 'FIX: R√©tablissement complet TTS - Message vocal apr√®s 3s' && git push"
